// graph rewrite rule file, shows how attribute conditions look like, and how attribute evaluations look like
// in the pattern part we have to check that the transition types are equivalent, and the trigger character is the same
// in the rewrite part we have to ensure that the trigger of the newly inserted transition is the same as the one of the originating forwarded transition
// before was removeEpsilons2.grg, next is removeEpsilons3.grg

#using "NFAModel.gm"

test checkStartState {
    x:StartState;
    negative {
        x;
        y:StartState;
    }
}

test checkDoublettes {
    x:State -e:Transition-> y:State;
    hom(x,y);
    x -doublette:Transition-> y;
    if {typeof(doublette) == typeof(e);}
    if { ((typeof(e) == EpsilonTransition) || (e.Trigger == doublette.Trigger)); }
}

rule forwardTransition {
    x:State -:EpsilonTransition-> y:State -e:Transition-> z:State;
    hom(y,z);
    negative {
        x -exists:Transition-> z;
        if {typeof(exists) == typeof(e);}
        if { ((typeof(e) == EpsilonTransition) || (e.Trigger == exists.Trigger)); }
    }

    modify {
        x -forward:typeof(e)-> z;
        eval {forward.Trigger = e.Trigger;}
    }
}
