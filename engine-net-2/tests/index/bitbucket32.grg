#using "bitbucket32.gm"

rule setup
{

	replace {
		n:Node -:Edge-> n;
	}
}

rule search()
{
	n:Node{unique[0]} -e:Edge{unique[1]}-> n;
	
	modify {
		eval {
			// output scheme stemming from value of attribute printing that gets inserted into test data file
			emit("1 value of attribute 5 6 " + uniqueof(n) + "\n");
			emit("1 value of attribute 5 6 " + uniqueof(e) + "\n");
		}
	}
}

rule searchNonIndex()
{
	n:Node -e:Edge-> n;
	
	modify {
		eval {
			// output scheme stemming from value of attribute printing that gets inserted into test data file
			emit("1 value of attribute 5 6 " + uniqueof(n) + "\n");
			emit("1 value of attribute 5 6 " + uniqueof(e) + "\n");
		}
	}
}

sequence onCloneSearch
{
	refGraph:graph
	;>
	{refGraph = copy(this); clear()}
	;>
	in refGraph { search() }
	;>
	{emit("1 value of attribute 5 6 separator\n")}
	;>
	search()
}

sequence onCloneSearchNonIndex
{
	refGraph:graph
	;>
	{refGraph = copy(this); clear()}
	;>
	in refGraph { searchNonIndex() }
	;>
	{emit("1 value of attribute 5 6 separator\n")}
	;>
	searchNonIndex()
}
