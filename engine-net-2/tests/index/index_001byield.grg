#using "index_model_001b.gm"

rule r13 {
---
	def -n:E->;
	yield {
		for(m:E in edgesFromIndexSame(foo, 13)) {
			yield n = m;
			break;
		}
	}
	
	modify {
	---
		emit("The value of attribute i is " + n.i + "\n");
	}
}

rule rascending {
---
	def -n:E->;
	yield {
		for(m:E in edgesFromIndexAscending(foo)) {
			yield n = m;
			break;
		}
	}
	
	modify {
	---
		emit("The value of attribute i is " + n.i + "\n");
	}
}

rule rdescending {
---
	def -n:E->;
	yield {
		for(m:E in edgesFromIndexDescending(foo)) {
			yield n = m;
			break;
		}
	}
	
	modify {
	---
		emit("The value of attribute i is " + n.i + "\n");
	}
}

rule rascendinglargerthan5lowerequal13 {
---
	def -n:E->;
	yield {
		for(m:E in edgesFromIndexFromExclusiveToAscending(foo, 5, 13)) {
			yield n = m;
			break;
		}
	}
	
	modify {
	---
		emit("The value of attribute i is " + n.i + "\n");
	}
}

rule rascendinglargerequal5 {
---
	def -n:E->;
	yield {
		for(m:E in edgesFromIndexFromAscending(foo, 5)) {
			yield n = m;
			break;
		}
	}
	
	modify {
	---
		emit("The value of attribute i is " + n.i + "\n");
	}
}

rule rascendinglowerthan13 {
---
	def -n:E->;
	yield {
		for(m:E in edgesFromIndexToExclusiveAscending(foo, 13)) {
			yield n = m;
			break;
		}
	}
	
	modify {
	---
		emit("The value of attribute i is " + n.i + "\n");
	}
}

rule rdescendinglowerthan13largerequal5 {
---
	def -n:E->;
	yield {
		for(m:E in edgesFromIndexFromExclusiveToDescending(foo, 13, 5)) {
			yield n = m;
			break;
		}
	}
	
	modify {
	---
		emit("The value of attribute i is " + n.i + "\n");
	}
}

rule rdescendinglowerequal13 {
---
	def -n:E->;
	yield {
		for(m:E in edgesFromIndexFromDescending(foo, 13)) {
			yield n = m;
			break;
		}
	}
	
	modify {
	---
		emit("The value of attribute i is " + n.i + "\n");
	}
}

rule rdescendinglargerthan5 {
---
	def -n:E->;
	yield {
		for(m:E in edgesFromIndexToExclusiveDescending(foo, 5)) {
			yield n = m;
			break;
		}
	}
	
	modify {
	---
		emit("The value of attribute i is " + n.i + "\n");
	}
}
