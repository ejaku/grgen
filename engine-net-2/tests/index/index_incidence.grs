new graph "index/index_incidence"

new :N($="1")
new :N($="2")
new :N($="3")
new :N($="4")
new :N($="5")
new :N($="6")
new :N($="7")
new :N($="8")
new :Node($="9")
new :Node($="A")
new @("1") -:E($="e1")-> @("2")
new @("1") -:E($="e2")-> @("3")
new @("1") -:E($="e3")-> @("4")
new @("2") -:E($="e4")-> @("5")
new @("3") -:E($="e5")-> @("5")
new @("4") -:E($="e6")-> @("6")
new @("7") -:E($="e7")-> @("7")
new @("9") -:E($="e8")-> @("A")
new @("A") -:E($="e9")-> @("A")

exec [rfoo]
exec [rbar]
exec [rbaz]
exec [rqux]
exec [rpix]
exec [rxom]

exec [sfoo]
exec [sbar]
exec [sbaz]
exec [squx]
exec [spix]
exec [sxom]

exec [tfoo]
exec [tbar]
exec [tbaz]
exec [tqux]
exec [tpix]
exec [txom]

exec (::a,::b,::c,::d)=fooincidencecount(@("1"), @("7"))
show var a
show var b
show var c
show var d

exec (::a,::b)=fooincidencecountexec(@("1"), @("7")) ;> { ::c = countFromIndex(foo, @("1")); ::d = countFromIndex(qux, @("7")) }
show var a
show var b
show var c
show var d

delete node @("9")
delete node @("5")
delete edge @("e9")

exec [rfoo]
exec [rbar]
exec [rbaz]
exec [rqux]
exec [rpix]
exec [rxom]

exec [sfoo]
exec [sbar]
exec [sbaz]
exec [squx]
exec [spix]
exec [sxom]

exec [tfoo]
exec [tbar]
exec [tbaz]
exec [tqux]
exec [tpix]
exec [txom]

quit
