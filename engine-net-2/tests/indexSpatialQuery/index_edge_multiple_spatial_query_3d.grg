#using "index_edge_multiple_spatial_query_3d.gm"

rule getEdgesFromBoundingBox(ref center:Point3d, var delta:double) : (set<AEdge>, set<AEdge>)
{
	---
	def ref s:set<AEdge>;
	yield {
		yield s = edgesFromIndexMultipleFromTo(ix, center.x - delta, center.x + delta, iy, center.y - delta, center.y + delta, iz, center.z - delta, center.z + delta);
	}
	
	modify {
		return (s, edgesFromIndexMultipleFromTo(ix, center.x - delta, center.x + delta, iy, center.y - delta, center.y + delta, iz, center.z - delta, center.z + delta));
	}
}

rule getEdgesFromBoundingBoxByMatching(ref center:Point3d, var delta:double) : (Point3dEdge)
{
	-e:Point3dEdge{multiple(ix >= center.x - delta, ix <= center.x + delta, iy >= center.y - delta, iy <= center.y + delta, iz >= center.z - delta, iz <= center.z + delta)}->;
	
	modify {
		return(e);
	}
}

rule getEdgesFromBoundingBoxByMatchingNeighboringEdges(-center:Point3dEdge->, var delta:double) : (Point3dEdge)
{
	-e:Point3dEdge{multiple(ix >= center.x - delta, ix <= center.x + delta, iy >= center.y - delta, iy <= center.y + delta, iz >= center.z - delta, iz <= center.z + delta)}->;
	hom(e, center);
	
	modify {
		return(e);
	}
}

test dataFileMatchingHelper
{
}
