#using "index_spatial_query_1d.gm"

rule getNodesFromUnitBoundingBoxAroundNode(n:N) : (set<Node>, set<Node>)
{
	---
	def ref s:set<Node>;
	yield {
		yield s = nodesFromIndexFromTo(ix, n.x - 1, n.x + 1);
	}
	
	modify {
		return (s, nodesFromIndexFromTo(ix, n.x - 1, n.x + 1));
	}
}

rule getNodesFromBoundingBoxAroundNode(n:N, var delta:int) : (set<Node>, set<Node>)
{
	---
	def ref s:set<Node>;
	yield {
		yield s = nodesFromIndexFromTo(ix, n.x - delta, n.x + delta);
	}
	
	modify {
		return (s, nodesFromIndexFromTo(ix, n.x - delta, n.x + delta));
	}
}

rule getNodesFromBoundingBoxAroundNodeByMatching(var x:int, var delta:int) : (N)
{
	neighbor:N{multiple(ix >= x - delta, ix <= x + delta)};
	
	modify {
		return (neighbor);
	}
}

rule getNodesFromBoundingBoxAroundNodeByMatchingNeighboringNodes(n:N, var delta:int) : (N)
{
	neighbor:N{multiple(ix >= n.x - delta, ix <= n.x + delta)};
	hom(neighbor, n);
	
	modify {
		return (neighbor);
	}
}

test dataFileMatchingHelper
{
}
