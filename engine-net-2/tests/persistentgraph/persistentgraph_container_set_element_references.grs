! rm testgraphfilename_container_set_element_references.db
#the test is typically started from the tests folder (has to be started from there due to the local path), so you will find the testgraphfilename.db there
new graph "persistentgraph/persistentgraph_container_set_element_references" persist with "libGrPersistenceProviderSQLite.dll" to "Data Source=testgraphfilename_container_set_element_references.db;Version=3;"

show num nodes N
show num edges E

new graph "persistentgraph/persistentgraph_container_set_element_references" "some non-persistent graph"

show num nodes N
show num edges E

exec init
exec initNested
exec (::n,::e,::o)=find
exec in ::n.s_g.peek(0) { find }
exec in ::e.s_g.peek(0) { find }
exec in ::o.s_g.peek(0) { find }

show node n
show edge e
show var o #should be show object o

show num nodes N
show num edges E

new graph "persistentgraph/persistentgraph_container_set_element_references" persist with "libGrPersistenceProviderSQLite.dll" to "Data Source=testgraphfilename_container_set_element_references.db;Version=3;"

show num nodes N
show num edges E

exec init
exec initNested
exec (::n,::e,::o)=find
exec in ::n.s_g.peek(0) { find }
exec in ::e.s_g.peek(0) { find }
exec in ::o.s_g.peek(0) { find }

show node n
show edge e
show var o #should be show object o

show num nodes N
show num edges E

new graph "persistentgraph/persistentgraph_container_set_element_references" "some non-persistent graph"

show num nodes N
show num edges E

new graph "persistentgraph/persistentgraph_container_set_element_references" persist with "libGrPersistenceProviderSQLite.dll" to "Data Source=testgraphfilename_container_set_element_references.db;Version=3;"

show num nodes N
show num edges E

exec (::n,::e,::o)=find
exec in ::n.s_g.peek(0) { find }
exec in ::e.s_g.peek(0) { find }
exec in ::o.s_g.peek(0) { find }

show node n
show edge e
show var o #should be show object o

clear graph

show num nodes N
show num edges E

quit
