using set1;

rule minmaxTest(ref niceSet:set<double>)
{
	a:A;
	
---
	def var min:int;
	def var niceMax:double;
	
	yield {
		yield min = a.ac.min();
		yield niceMax = niceSet.max();
	}

	modify {
	---
		emit("1 value of attribute 5 6 " + min + "\n");
		emit("1 value of attribute 5 6 " + a.ac.max() + "\n");
		emit("1 value of attribute 5 6 " + niceSet.min() + "\n");
		emit("1 value of attribute 5 6 " + niceMax + "\n");
	}
}

rule minmaxTestExec
{
	a:A;
	
---
	modify {
	---
		exec( {
			emit("1 value of attribute 5 6 " + a.ac.min() + "\n");
			emit("1 value of attribute 5 6 " + set<int>{1,2}.max() + "\n");
			emit("1 value of attribute 5 6 " + ::niceSetGlob.min() + "\n");
			emit("1 value of attribute 5 6 " + ::niceSetGlob.max() + "\n");
		} );
	}
}
