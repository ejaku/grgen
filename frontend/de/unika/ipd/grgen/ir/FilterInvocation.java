/*
 * GrGen: graph rewrite generator tool -- release GrGen.NET 6.6
 * Copyright (C) 2003-2022 Universitaet Karlsruhe, Institut fuer Programmstrukturen und Datenorganisation, LS Goos; and free programmers
 * licensed under LGPL v3 (see LICENSE.txt included in the packaging of this file)
 * www.grgen.net
 */

/**
 * @author Edgar Jakumeit
 */

package de.unika.ipd.grgen.ir;

import java.util.ArrayList;
import java.util.List;

import de.unika.ipd.grgen.ir.executable.FilterAutoGenerated;
import de.unika.ipd.grgen.ir.executable.FilterAutoSupplied;
import de.unika.ipd.grgen.ir.executable.Rule;
import de.unika.ipd.grgen.ir.expr.Expression;

public class FilterInvocation extends FilterInvocationBase
{
	FilterAutoGenerated filterAutoGenerated;
	FilterAutoSupplied filterAutoSupplied;
	
	List<Expression> filterArguments;

	public FilterInvocation(String name, Ident ident, FilterAutoGenerated filterAutoGenerated, Rule iteratedAction)
	{
		super(name, ident, iteratedAction);
		this.filterAutoGenerated = filterAutoGenerated;
		this.filterArguments = new ArrayList<Expression>();
	}

	public FilterInvocation(String name, Ident ident, FilterAutoSupplied filterAutoSupplied, Rule iteratedAction)
	{
		super(name, ident, iteratedAction);
		this.filterAutoSupplied = filterAutoSupplied;
		this.filterArguments = new ArrayList<Expression>();
	}

	public void addArgument(Expression expr)
	{
		filterArguments.add(expr);
	}

	public FilterAutoSupplied getFilterAutoSupplied()
	{
		return filterAutoSupplied;
	}

	public FilterAutoGenerated getFilterAutoGenerated()
	{
		return filterAutoGenerated;
	}

	public List<Expression> getFilterArguments()
	{
		return filterArguments;
	}

	public Expression getFilterArgument(int i)
	{
		return filterArguments.get(i);
	}
}
