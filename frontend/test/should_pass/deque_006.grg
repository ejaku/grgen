using deque_model_001;

rule addToDeque {
	a:A; b:A;

	if {
		a.niceDeque.subdeque(a.niceDeque.indexOf("foo"), 1).size()>=1 ;
		a.niceDeque.subdeque(a.niceDeque.indexOf("foo", 42), 1).size()>=1 ;
		a.niceDeque.subdeque(a.niceDeque.lastIndexOf("foo"), 1).size()>=1 ;
		a.niceDeque.subdeque(a.niceDeque.lastIndexOf("foo", 42), 1).size()>=1 ;
		a.niceDeque.asSet().size()>=1;
		a.spiceDeque.subdeque(0, a.spiceDeque.size()).size()>=1;
	}
	
	modify {
		eval {
			a.niceDeque = a.niceDeque.subdeque(a.niceDeque.indexOf("foo"), 1);
			a.niceDeque = a.niceDeque.subdeque(a.niceDeque.indexOf("foo", 42), 1);
			a.niceDeque = a.niceDeque.subdeque(a.niceDeque.lastIndexOf("foo"), 1);
			a.niceDeque = a.niceDeque.subdeque(a.niceDeque.lastIndexOf("foo", 42), 1);
			a.spiceDeque = deque<int>[(a.niceDeque.asSet() & set<string>{"a","b"}).size()];
			a.spiceDeque = a.spiceDeque.subdeque(0, a.spiceDeque.size());
		}
	}
}
