#using "index_model_002.gm"

function f() : int
{
	return(0);
}

rule i {
	if{ nodesFromIndex(fooi).size() > 0; }
	if{ nodesFromIndexSame(fooi, 42).size() > 0; }
	if{ nodesFromIndexFrom(fooi, 42).size() > 0; }
	if{ nodesFromIndexFromExclusive(fooi, 42).size() > 0; }
	if{ nodesFromIndexTo(fooi, 42).size() > 0; }
	if{ nodesFromIndexToExclusive(fooi, 42).size() > 0; }
	if{ nodesFromIndexFromTo(fooi, f(), 42).size() > 0; }
	if{ nodesFromIndexFromExclusiveTo(fooi, f(), 42).size() > 0; }
	if{ nodesFromIndexFromToExclusive(fooi, f(), 42).size() > 0; }
	if{ nodesFromIndexFromExclusiveToExclusive(fooi, f(), 42).size() > 0; }
	
	modify {
		eval {
			def var s:int;
			s = nodesFromIndex(fooi).size();
			s = nodesFromIndexSame(fooi, 42).size();
			s = nodesFromIndexFrom(fooi, 42).size();
			s = nodesFromIndexFromExclusive(fooi, 42).size();
			s = nodesFromIndexTo(fooi, 42).size();
			s = nodesFromIndexToExclusive(fooi, 42).size();
			s = nodesFromIndexFromTo(fooi, f(), 42).size();
			s = nodesFromIndexFromExclusiveTo(fooi, f(), 42).size();
			s = nodesFromIndexFromToExclusive(fooi, f(), 42).size();
			s = nodesFromIndexFromExclusiveToExclusive(fooi, f(), 42).size();
		}
	}
}

rule ei {
	if{ edgesFromIndex(bari).size() > 0; }
	if{ edgesFromIndexSame(bari, 42).size() > 0; }
	if{ edgesFromIndexFrom(bari, 42).size() > 0; }
	if{ edgesFromIndexFromExclusive(bari, 42).size() > 0; }
	if{ edgesFromIndexTo(bari, 42).size() > 0; }
	if{ edgesFromIndexToExclusive(bari, 42).size() > 0; }
	if{ edgesFromIndexFromTo(bari, f(), 42).size() > 0; }
	if{ edgesFromIndexFromExclusiveTo(bari, f(), 42).size() > 0; }
	if{ edgesFromIndexFromToExclusive(bari, f(), 42).size() > 0; }
	if{ edgesFromIndexFromExclusiveToExclusive(bari, f(), 42).size() > 0; }
	
	modify {
		eval {
			def var s:int;
			s = edgesFromIndex(bari).size();
			s = edgesFromIndexSame(bari, 42).size();
			s = edgesFromIndexFrom(bari, 42).size();
			s = edgesFromIndexFromExclusive(bari, 42).size();
			s = edgesFromIndexTo(bari, 42).size();
			s = edgesFromIndexToExclusive(bari, 42).size();
			s = edgesFromIndexFromTo(bari, f(), 42).size();
			s = edgesFromIndexFromExclusiveTo(bari, f(), 42).size();
			s = edgesFromIndexFromToExclusive(bari, f(), 42).size();
			s = edgesFromIndexFromExclusiveToExclusive(bari, f(), 42).size();
		}
	}
}
