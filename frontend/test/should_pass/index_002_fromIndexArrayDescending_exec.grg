#using "index_model_002.gm"

function f() : int
{
	return(0);
}

rule i {
	modify {
		---
		def var s:int;
		exec( {
			s = nodesFromIndexAsArrayDescending(fooi).size();
			s = nodesFromIndexSameAsArray(fooi, 42).size();
			s = nodesFromIndexFromAsArrayDescending(fooi, 42).size();
			s = nodesFromIndexFromExclusiveAsArrayDescending(fooi, 42).size();
			s = nodesFromIndexToAsArrayDescending(fooi, 42).size();
			s = nodesFromIndexToExclusiveAsArrayDescending(fooi, 42).size();
			s = nodesFromIndexFromToAsArrayDescending(fooi, f(), 42).size();
			s = nodesFromIndexFromExclusiveToAsArrayDescending(fooi, f(), 42).size();
			s = nodesFromIndexFromToExclusiveAsArrayDescending(fooi, f(), 42).size();
			s = nodesFromIndexFromExclusiveToExclusiveAsArrayDescending(fooi, f(), 42).size();
		} );
	}
}

rule ei {
	modify {
		---
		def var s:int;
		exec( {
			s = edgesFromIndexAsArrayDescending(bari).size();
			s = edgesFromIndexSameAsArray(bari, 42).size();
			s = edgesFromIndexFromAsArrayDescending(bari, 42).size();
			s = edgesFromIndexFromExclusiveAsArrayDescending(bari, 42).size();
			s = edgesFromIndexToAsArrayDescending(bari, 42).size();
			s = edgesFromIndexToExclusiveAsArrayDescending(bari, 42).size();
			s = edgesFromIndexFromToAsArrayDescending(bari, f(), 42).size();
			s = edgesFromIndexFromExclusiveToAsArrayDescending(bari, f(), 42).size();
			s = edgesFromIndexFromToExclusiveAsArrayDescending(bari, f(), 42).size();
			s = edgesFromIndexFromExclusiveToExclusiveAsArrayDescending(bari, f(), 42).size();
		} );
	}
}
