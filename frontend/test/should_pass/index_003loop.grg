#using "index_model_003.gm"

rule t(var x:int)
{
	m:N;
---
	def ref res:set<Node> = set<Node>{};
	yield
	{
		for(n:Node in nodesFromIndexSame(foo, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexSame(bar, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexSame(baz, 42))
		{
			res.add(n);
		}

		for(n:N in nodesFromIndexAscending(foo))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexAscending(bar))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexAscending(baz))
		{
			res.add(n);
		}

		for(n:N in nodesFromIndexDescending(foo))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexDescending(bar))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexDescending(baz))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromAscending(foo, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromAscending(bar, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromAscending(baz, 42))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromExclusiveDescending(foo, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromExclusiveDescending(bar, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromExclusiveDescending(baz, 42))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromToExclusiveAscending(foo, 42, 1000))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveAscending(bar, 42, 1000))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveAscending(baz, 42, 1000))
		{
			res.add(n);
		}

		for(n:Node in nodesFromIndexFromToExclusiveDescending(foo, x, x-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(bar, x, x-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(baz, x, x-42))
		{
			res.add(n);
		}

		for(n:Node in nodesFromIndexFromToExclusiveDescending(foo, m.i, m.i-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(bar, m.i, m.i-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(baz, m.i, m.i-42))
		{
			res.add(n);
		}
	}
	
	modify {
	---
		def ref res_:set<Node> = set<Node>{};
		eval
		{
			for(n:Node in nodesFromIndexSame(foo, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexSame(bar, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexSame(baz, 42))
			{
				res_.add(n);
			}

			for(n:N in nodesFromIndexAscending(foo))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexAscending(bar))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexAscending(baz))
			{
				res_.add(n);
			}

			for(n:N in nodesFromIndexDescending(foo))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexDescending(bar))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexDescending(baz))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromAscending(foo, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromAscending(bar, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromAscending(baz, 42))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromExclusiveDescending(foo, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromExclusiveDescending(bar, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromExclusiveDescending(baz, 42))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromToExclusiveAscending(foo, 42, 1000))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveAscending(bar, 42, 1000))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveAscending(baz, 42, 1000))
			{
				res_.add(n);
			}

			for(n:Node in nodesFromIndexFromToExclusiveDescending(foo, x, x-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(bar, x, x-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(baz, x, x-42))
			{
				res_.add(n);
			}

			for(n:Node in nodesFromIndexFromToExclusiveDescending(foo, m.i, m.i-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(bar, m.i, m.i-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(baz, m.i, m.i-42))
			{
				res_.add(n);
			}
		}
	}
}

rule t2(var x:int)
{
	m:N;
---
	def ref res:set<Node> = set<Node>{};
	yield
	{
		for(n:Node in nodesFromIndexSame(foo2, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexSame(bar2, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexSame(baz2, 42))
		{
			res.add(n);
		}

		for(n:N in nodesFromIndexAscending(foo2))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexAscending(bar2))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexAscending(baz2))
		{
			res.add(n);
		}

		for(n:N in nodesFromIndexDescending(foo2))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexDescending(bar2))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexDescending(baz2))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromAscending(foo2, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromAscending(bar2, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromAscending(baz2, 42))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromExclusiveDescending(foo2, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromExclusiveDescending(bar2, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromExclusiveDescending(baz2, 42))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromToExclusiveAscending(foo2, 42, 1000))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveAscending(bar2, 42, 1000))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveAscending(baz2, 42, 1000))
		{
			res.add(n);
		}

		for(n:Node in nodesFromIndexFromToExclusiveDescending(foo2, x, x-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(bar2, x, x-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(baz2, x, x-42))
		{
			res.add(n);
		}

		for(n:Node in nodesFromIndexFromToExclusiveDescending(foo2, m.i, m.i-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(bar2, m.i, m.i-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(baz2, m.i, m.i-42))
		{
			res.add(n);
		}
	}
	
	modify {
	---
		def ref res_:set<Node> = set<Node>{};
		eval
		{
			for(n:Node in nodesFromIndexSame(foo2, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexSame(bar2, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexSame(baz2, 42))
			{
				res_.add(n);
			}

			for(n:N in nodesFromIndexAscending(foo2))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexAscending(bar2))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexAscending(baz2))
			{
				res_.add(n);
			}

			for(n:N in nodesFromIndexDescending(foo2))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexDescending(bar2))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexDescending(baz2))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromAscending(foo2, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromAscending(bar2, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromAscending(baz2, 42))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromExclusiveDescending(foo2, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromExclusiveDescending(bar2, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromExclusiveDescending(baz2, 42))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromToExclusiveAscending(foo2, 42, 1000))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveAscending(bar2, 42, 1000))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveAscending(baz2, 42, 1000))
			{
				res_.add(n);
			}

			for(n:Node in nodesFromIndexFromToExclusiveDescending(foo2, x, x-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(bar2, x, x-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(baz2, x, x-42))
			{
				res_.add(n);
			}

			for(n:Node in nodesFromIndexFromToExclusiveDescending(foo2, m.i, m.i-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(bar2, m.i, m.i-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(baz2, m.i, m.i-42))
			{
				res_.add(n);
			}
		}
	}
}

rule t3(var x:int)
{
	m:N;
---
	def ref res:set<Node> = set<Node>{};
	yield
	{
		for(n:Node in nodesFromIndexSame(foo3, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexSame(bar3, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexSame(baz3, 42))
		{
			res.add(n);
		}

		for(n:N in nodesFromIndexAscending(foo3))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexAscending(bar3))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexAscending(baz3))
		{
			res.add(n);
		}

		for(n:N in nodesFromIndexDescending(foo3))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexDescending(bar3))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexDescending(baz3))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromAscending(foo3, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromAscending(bar3, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromAscending(baz3, 42))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromExclusiveDescending(foo3, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromExclusiveDescending(bar3, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromExclusiveDescending(baz3, 42))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromToExclusiveAscending(foo3, 42, 1000))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveAscending(bar3, 42, 1000))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveAscending(baz3, 42, 1000))
		{
			res.add(n);
		}

		for(n:Node in nodesFromIndexFromToExclusiveDescending(foo3, x, x-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(bar3, x, x-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(baz3, x, x-42))
		{
			res.add(n);
		}

		for(n:Node in nodesFromIndexFromToExclusiveDescending(foo3, m.i, m.i-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(bar3, m.i, m.i-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(baz3, m.i, m.i-42))
		{
			res.add(n);
		}
	}
	
	modify {
	---
		def ref res_:set<Node> = set<Node>{};
		eval
		{
			for(n:Node in nodesFromIndexSame(foo3, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexSame(bar3, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexSame(baz3, 42))
			{
				res_.add(n);
			}

			for(n:N in nodesFromIndexAscending(foo3))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexAscending(bar3))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexAscending(baz3))
			{
				res_.add(n);
			}

			for(n:N in nodesFromIndexDescending(foo3))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexDescending(bar3))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexDescending(baz3))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromAscending(foo3, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromAscending(bar3, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromAscending(baz3, 42))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromExclusiveDescending(foo3, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromExclusiveDescending(bar3, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromExclusiveDescending(baz3, 42))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromToExclusiveAscending(foo3, 42, 1000))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveAscending(bar3, 42, 1000))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveAscending(baz3, 42, 1000))
			{
				res_.add(n);
			}

			for(n:Node in nodesFromIndexFromToExclusiveDescending(foo3, x, x-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(bar3, x, x-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(baz3, x, x-42))
			{
				res_.add(n);
			}

			for(n:Node in nodesFromIndexFromToExclusiveDescending(foo3, m.i, m.i-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(bar3, m.i, m.i-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(baz3, m.i, m.i-42))
			{
				res_.add(n);
			}
		}
	}
}

rule t4(var x:int)
{
	m:N;
---
	def ref res:set<Node> = set<Node>{};
	yield
	{
		for(n:Node in nodesFromIndexSame(foo4, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexSame(bar4, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexSame(baz4, 42))
		{
			res.add(n);
		}

		for(n:N in nodesFromIndexAscending(foo4))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexAscending(bar4))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexAscending(baz4))
		{
			res.add(n);
		}

		for(n:N in nodesFromIndexDescending(foo4))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexDescending(bar4))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexDescending(baz4))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromAscending(foo4, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromAscending(bar4, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromAscending(baz4, 42))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromExclusiveDescending(foo4, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromExclusiveDescending(bar4, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromExclusiveDescending(baz4, 42))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromToExclusiveAscending(foo4, 42, 1000))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveAscending(bar4, 42, 1000))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveAscending(baz4, 42, 1000))
		{
			res.add(n);
		}

		for(n:Node in nodesFromIndexFromToExclusiveDescending(foo4, x, x-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(bar4, x, x-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(baz4, x, x-42))
		{
			res.add(n);
		}

		for(n:Node in nodesFromIndexFromToExclusiveDescending(foo4, m.i, m.i-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(bar4, m.i, m.i-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(baz4, m.i, m.i-42))
		{
			res.add(n);
		}
	}
	
	modify {
	---
		def ref res_:set<Node> = set<Node>{};
		eval
		{
			for(n:Node in nodesFromIndexSame(foo4, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexSame(bar4, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexSame(baz4, 42))
			{
				res_.add(n);
			}

			for(n:N in nodesFromIndexAscending(foo4))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexAscending(bar4))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexAscending(baz4))
			{
				res_.add(n);
			}

			for(n:N in nodesFromIndexDescending(foo4))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexDescending(bar4))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexDescending(baz4))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromAscending(foo4, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromAscending(bar4, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromAscending(baz4, 42))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromExclusiveDescending(foo4, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromExclusiveDescending(bar4, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromExclusiveDescending(baz4, 42))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromToExclusiveAscending(foo4, 42, 1000))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveAscending(bar4, 42, 1000))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveAscending(baz4, 42, 1000))
			{
				res_.add(n);
			}

			for(n:Node in nodesFromIndexFromToExclusiveDescending(foo4, x, x-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(bar4, x, x-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(baz4, x, x-42))
			{
				res_.add(n);
			}

			for(n:Node in nodesFromIndexFromToExclusiveDescending(foo4, m.i, m.i-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(bar4, m.i, m.i-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(baz4, m.i, m.i-42))
			{
				res_.add(n);
			}
		}
	}
}

rule t5(var x:int)
{
	m:N;
---
	def ref res:set<Node> = set<Node>{};
	yield
	{
		for(n:Node in nodesFromIndexSame(foo5, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexSame(bar5, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexSame(baz5, 42))
		{
			res.add(n);
		}

		for(n:N in nodesFromIndexAscending(foo5))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexAscending(bar5))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexAscending(baz5))
		{
			res.add(n);
		}

		for(n:N in nodesFromIndexDescending(foo5))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexDescending(bar5))
		{
			res.add(n);
		}
		for(n:N in nodesFromIndexDescending(baz5))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromAscending(foo5, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromAscending(bar5, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromAscending(baz5, 42))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromExclusiveDescending(foo5, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromExclusiveDescending(bar5, 42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromExclusiveDescending(baz5, 42))
		{
			res.add(n);
		}
		
		for(n:Node in nodesFromIndexFromToExclusiveAscending(foo5, 42, 1000))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveAscending(bar5, 42, 1000))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveAscending(baz5, 42, 1000))
		{
			res.add(n);
		}

		for(n:Node in nodesFromIndexFromToExclusiveDescending(foo5, x, x-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(bar5, x, x-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(baz5, x, x-42))
		{
			res.add(n);
		}

		for(n:Node in nodesFromIndexFromToExclusiveDescending(foo5, m.i, m.i-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(bar5, m.i, m.i-42))
		{
			res.add(n);
		}
		for(n:Node in nodesFromIndexFromToExclusiveDescending(baz5, m.i, m.i-42))
		{
			res.add(n);
		}
	}
	
	modify {
	---
		def ref res_:set<Node> = set<Node>{};
		eval
		{
			for(n:Node in nodesFromIndexSame(foo5, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexSame(bar5, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexSame(baz5, 42))
			{
				res_.add(n);
			}

			for(n:N in nodesFromIndexAscending(foo5))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexAscending(bar5))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexAscending(baz5))
			{
				res_.add(n);
			}

			for(n:N in nodesFromIndexDescending(foo5))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexDescending(bar5))
			{
				res_.add(n);
			}
			for(n:N in nodesFromIndexDescending(baz5))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromAscending(foo5, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromAscending(bar5, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromAscending(baz5, 42))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromExclusiveDescending(foo5, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromExclusiveDescending(bar5, 42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromExclusiveDescending(baz5, 42))
			{
				res_.add(n);
			}
			
			for(n:Node in nodesFromIndexFromToExclusiveAscending(foo5, 42, 1000))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveAscending(bar5, 42, 1000))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveAscending(baz5, 42, 1000))
			{
				res_.add(n);
			}

			for(n:Node in nodesFromIndexFromToExclusiveDescending(foo5, x, x-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(bar5, x, x-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(baz5, x, x-42))
			{
				res_.add(n);
			}

			for(n:Node in nodesFromIndexFromToExclusiveDescending(foo5, m.i, m.i-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(bar5, m.i, m.i-42))
			{
				res_.add(n);
			}
			for(n:Node in nodesFromIndexFromToExclusiveDescending(baz5, m.i, m.i-42))
			{
				res_.add(n);
			}
		}
	}
}
